
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.EjercicioScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  musculoObjetivo: 'musculoObjetivo',
  urlVideo: 'urlVideo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RutinaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  creadorId: 'creadorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RutinaEjercicioScalarFieldEnum = {
  id: 'id',
  rutinaId: 'rutinaId',
  ejercicioId: 'ejercicioId',
  series: 'series',
  repeticiones: 'repeticiones',
  cargaSugerida: 'cargaSugerida',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AsignacionRutinaScalarFieldEnum = {
  id: 'id',
  clienteId: 'clienteId',
  entrenadorId: 'entrenadorId',
  rutinaId: 'rutinaId',
  fechaInicio: 'fechaInicio',
  fechaFin: 'fechaFin',
  activa: 'activa',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RegistroProgresoScalarFieldEnum = {
  id: 'id',
  asignacionId: 'asignacionId',
  ejercicioId: 'ejercicioId',
  fechaRegistro: 'fechaRegistro',
  setsRealizados: 'setsRealizados',
  repeticionesMax: 'repeticionesMax',
  cargaLevantada: 'cargaLevantada',
  notasEntrenador: 'notasEntrenador',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Ejercicio: 'Ejercicio',
  Rutina: 'Rutina',
  RutinaEjercicio: 'RutinaEjercicio',
  AsignacionRutina: 'AsignacionRutina',
  RegistroProgreso: 'RegistroProgreso'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Proyectos\\Tesis_Apolo_Gym\\apps\\prisma\\generated\\ms-trainings",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Proyectos\\Tesis_Apolo_Gym\\apps\\ms-trainings\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../ms-trainings/prisma/.env"
  },
  "relativePath": "../../../ms-trainings/prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../../prisma/generated/ms-trainings\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Tabla de ejercicios\nmodel Ejercicio {\n  id                String             @id @default(uuid())\n  nombre            String\n  descripcion       String\n  musculoObjetivo   String\n  urlVideo          String?\n  // Relaciones\n  rutinaEjercicios  RutinaEjercicio[]\n  registrosProgreso RegistroProgreso[]\n  createdAt         DateTime           @default(now())\n  updatedAt         DateTime           @updatedAt\n\n  @@map(\"ejercicios\")\n}\n\n// Tabla de plantillas de rutina\nmodel Rutina {\n  id           String             @id @default(uuid())\n  nombre       String\n  creadorId    String\n  // Relaciones\n  ejercicios   RutinaEjercicio[]\n  asignaciones AsignacionRutina[]\n  createdAt    DateTime           @default(now())\n  updatedAt    DateTime           @updatedAt\n\n  @@map(\"rutinas\")\n}\n\n// Tabla de detalle de la rutina\nmodel RutinaEjercicio {\n  id            String    @id @default(uuid())\n  rutinaId      String\n  ejercicioId   String\n  series        Int\n  repeticiones  String // Formato: \"8-12\"\n  cargaSugerida String // Formato: \"60-70% 1RM\"\n  // Relaciones\n  rutina        Rutina    @relation(fields: [rutinaId], references: [id])\n  ejercicio     Ejercicio @relation(fields: [ejercicioId], references: [id])\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n\n  @@map(\"rutina_ejercicios\")\n}\n\n// Tabla de asignaci√≥n cliente-rutina\nmodel AsignacionRutina {\n  id           String             @id @default(uuid())\n  clienteId    String\n  entrenadorId String\n  rutinaId     String\n  fechaInicio  DateTime\n  fechaFin     DateTime\n  activa       Boolean            @default(true)\n  // Relaciones\n  rutina       Rutina             @relation(fields: [rutinaId], references: [id])\n  registros    RegistroProgreso[]\n  createdAt    DateTime           @default(now())\n  updatedAt    DateTime           @updatedAt\n\n  @@map(\"asignacion_rutinas\")\n}\n\n// Tabla de seguimiento del progreso\nmodel RegistroProgreso {\n  id              String           @id @default(uuid())\n  asignacionId    String\n  ejercicioId     String\n  fechaRegistro   DateTime\n  setsRealizados  Int\n  repeticionesMax Int\n  cargaLevantada  Decimal\n  notasEntrenador String?\n  // Relaciones\n  asignacion      AsignacionRutina @relation(fields: [asignacionId], references: [id])\n  ejercicio       Ejercicio        @relation(fields: [ejercicioId], references: [id])\n  createdAt       DateTime         @default(now())\n  updatedAt       DateTime         @updatedAt\n\n  @@map(\"registro_progresos\")\n}\n",
  "inlineSchemaHash": "2754422cc86232278abc6d9bb0da9930e3636b316fff9c18c401a90046127643",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Ejercicio\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descripcion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"musculoObjetivo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"urlVideo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rutinaEjercicios\",\"kind\":\"object\",\"type\":\"RutinaEjercicio\",\"relationName\":\"EjercicioToRutinaEjercicio\"},{\"name\":\"registrosProgreso\",\"kind\":\"object\",\"type\":\"RegistroProgreso\",\"relationName\":\"EjercicioToRegistroProgreso\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"ejercicios\"},\"Rutina\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creadorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ejercicios\",\"kind\":\"object\",\"type\":\"RutinaEjercicio\",\"relationName\":\"RutinaToRutinaEjercicio\"},{\"name\":\"asignaciones\",\"kind\":\"object\",\"type\":\"AsignacionRutina\",\"relationName\":\"AsignacionRutinaToRutina\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"rutinas\"},\"RutinaEjercicio\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rutinaId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ejercicioId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"series\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"repeticiones\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cargaSugerida\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rutina\",\"kind\":\"object\",\"type\":\"Rutina\",\"relationName\":\"RutinaToRutinaEjercicio\"},{\"name\":\"ejercicio\",\"kind\":\"object\",\"type\":\"Ejercicio\",\"relationName\":\"EjercicioToRutinaEjercicio\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"rutina_ejercicios\"},\"AsignacionRutina\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clienteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entrenadorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rutinaId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fechaInicio\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fechaFin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"activa\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"rutina\",\"kind\":\"object\",\"type\":\"Rutina\",\"relationName\":\"AsignacionRutinaToRutina\"},{\"name\":\"registros\",\"kind\":\"object\",\"type\":\"RegistroProgreso\",\"relationName\":\"AsignacionRutinaToRegistroProgreso\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"asignacion_rutinas\"},\"RegistroProgreso\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"asignacionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ejercicioId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fechaRegistro\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"setsRealizados\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"repeticionesMax\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cargaLevantada\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"notasEntrenador\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"asignacion\",\"kind\":\"object\",\"type\":\"AsignacionRutina\",\"relationName\":\"AsignacionRutinaToRegistroProgreso\"},{\"name\":\"ejercicio\",\"kind\":\"object\",\"type\":\"Ejercicio\",\"relationName\":\"EjercicioToRegistroProgreso\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"registro_progresos\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

